<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:jee="http://www.springframework.org/schema/jee"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:security="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/jee
http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.2.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    
    <annotation-driven />
    
    <!--    The mapping attribute defines
    the URL for mapping to static resources; as an example, for the URL
    http://localhost:8080/ch17/resources/styles/standard.css-->

    <resources location="/, classpath:/META-INF/web-resources/" mapping="/resources/**"/>
    
    <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/lksflr_ds"/>
    
    <beans:bean id="usersDao" class="biz.letsweb.lukasfloorspring.dataaccess.dao.JdbcUsersDao"
                p:dataSource-ref="dataSource" />
    <beans:bean id="pagesDao" class="biz.letsweb.lukasfloorspring.dataaccess.dao.JdbcPagesDao"
                p:dataSource-ref="dataSource" />
    <beans:bean id="pricesDao" class="biz.letsweb.lukasfloorspring.dataaccess.dao.JdbcPriceLineDao"
                p:dataSource-ref="dataSource" />
    <beans:bean id="facebook" class="org.springframework.social.facebook.api.impl.FacebookTemplate" />
    <!--    <beans:bean id="indexController" class="biz.letsweb.lukasfloorspring.IndexController"
    p:facebook-ref="facebook" />-->
    
    <!--    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>-->
    
    <context:component-scan base-package="biz.letsweb.lukasfloorspring" />
    
    <interceptors>
        <!--THEMES bean-->
        <beans:bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor"/>
        <beans:bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" 
                    p:paramName="lang"/>
        <interceptor> 
            <mapping path="/**" />
            <beans:bean class="biz.letsweb.lukasfloorspring.interceptors.MobileInterceptor" init-method="init">
                <beans:property name="mobileUserAgents">
                    <beans:list value-type="java.lang.String">
                        <beans:value>.*(webos|palm|treo).*</beans:value>
                        <beans:value>.*(android).*</beans:value>
                        <beans:value>.*(kindle|pocket|o2|vodaphone|wap|midp|psp).*</beans:value>
                        <beans:value>.*(iphone|ipod).*</beans:value>
                        <beans:value>.*(blackberry|opera mini).*</beans:value>
                    </beans:list>
                </beans:property>
            </beans:bean>
        </interceptor>
    </interceptors>
    
    <!--THEMES-->
    
    <!--ResourceBundleThemeSource class, is responsible for loading the ResourceBundle of the active theme-->
    <beans:bean class="org.springframework.ui.context.support.ResourceBundleThemeSource" 
                id="themeSource" 
                p:basenamePrefix="theme" />
    <!--CookieThemeResolver class, is used to resolve the active theme for users-->
    <beans:bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver" 
                id="localeResolver" 
                p:cookieName="locale" 
                p:defaultLocale="pl" 
                p:cookieMaxAge="3600"
                />
    
    <beans:bean class="org.springframework.web.servlet.theme.CookieThemeResolver"
                id="themeResolver" 
                p:cookieName="theme" 
                p:defaultThemeName="1" />
    
    <beans:bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
                id="messageSource" 
                p:basenames="WEB-INF/i18n/messages, WEB-INF/i18n/application, classpath:theme1"
                p:fallbackToSystemLocale="true" 
                p:defaultEncoding="UTF-8" 
                p:useCodeAsDefaultMessage="true"    />

    <!--TILES TEMPLATING-->
    <!-- Tiles Configuration -->
    <beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" 
                id="tilesViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
    </beans:bean>
    <!--<beans:bean id="tilesviewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"/>-->
    <beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"
                id="tilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <!--Scan views directory for Tiles configurations--> 
                <beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
    
    <!--    The <default-servlet-handler/> tag enables
    the mapping of the DispatcherServlet to the web applicationâ€™s root context URL, while still allowing
    static resource requests to be handled by the container's default servlet.-->
    <default-servlet-handler/> 
    <!-- Enables the Spring MVC @Controller programming model -->
    <!--<annotation-driven validator="validator"/>-->
    <!-- Enable controller method level security -->
    <security:global-method-security pre-post-annotations="enabled"/>
    <!--<context:property-placeholder location="classpath*:*.properties"/>-->
    <!--    the below from 
    http://stackoverflow.com/questions/13297157/best-ways-to-deal-with-properties-values-in-xml-file-in-spring-maven-and-eclips
    work-->
    <beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="locations">
            <beans:list>
                <!--Default location inside war file--> 
                <beans:value>classpath:application.properties</beans:value>
                <!--Environment specific location, a fixed path on server--> 
                <!--<beans:value>file:c:\Users\Tomasz\application.properties</beans:value>-->
            </beans:list>
        </beans:property>
        <beans:property name="ignoreResourceNotFound" value="true"/>
    </beans:bean>
   
    <!--    <beans:bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <beans:property name="exceptionMappings">
            <beans:props>
                <beans:prop key="java.lang.Throwable">error</beans:prop>
            </beans:props>        
        </beans:property>
    </beans:bean>-->

</beans:beans>